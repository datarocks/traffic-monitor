[
    {
        "id": "94d07e407c25f282",
        "type": "tab",
        "label": "flow-radar-01",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "49e416bfab1d4055",
        "type": "tab",
        "label": "Frigate MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "90d5c925f9fbf9fd",
        "type": "tab",
        "label": "Aux data capture",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "04cc3b7b3e019683",
        "type": "group",
        "z": "94d07e407c25f282",
        "name": "TimedSpeedCounts records",
        "style": {
            "label": true
        },
        "nodes": [
            "ab1b88cd16ef31c4",
            "35c0bee67148cfa7",
            "7055d871474e5c63",
            "9496fe7a475726de",
            "617c9bb213538929",
            "c96c20a6a94d3073",
            "526eb1967dda78c4"
        ],
        "x": 74,
        "y": 999,
        "w": 1312,
        "h": 222
    },
    {
        "id": "1d00b3011a12b204",
        "type": "group",
        "z": "94d07e407c25f282",
        "name": "DetectedObjectVelocity records",
        "style": {
            "label": true
        },
        "nodes": [
            "04f7f4b860fe36bc",
            "4039fcd5e467867d",
            "4681243b9c70e906",
            "b8db51ab64a3d61e",
            "b0814f902d047f9f"
        ],
        "x": 74,
        "y": 799,
        "w": 1332,
        "h": 182
    },
    {
        "id": "3acc78eb8fcb72f8",
        "type": "group",
        "z": "94d07e407c25f282",
        "name": "TimedSpeedCounts records",
        "style": {
            "label": true
        },
        "nodes": [
            "c1154952a99c99a3",
            "207eac3ff9b634a5",
            "2fded2c6588bfd47",
            "1daaab9e36f6fdb2",
            "0cccf06fa248a643",
            "ab905349bef72bac",
            "18b1eaf942e6b674",
            "ffefd7af202792df",
            "65512a020a745b9a"
        ],
        "x": 74,
        "y": 1259,
        "w": 1692,
        "h": 182
    },
    {
        "id": "a5d65dd0e3566daa",
        "type": "mqtt-broker",
        "name": "mqtt-broker-frigate",
        "broker": "10.10.10.223",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "73598328fc95017b",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "influxdb-node-red",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://10.10.10.223:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "d65c36624d553ee7",
        "type": "serial-port",
        "name": "",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "5000"
    },
    {
        "id": "e43506628b4a1cdb",
        "type": "comment",
        "z": "94d07e407c25f282",
        "name": "AN-10 API Interface",
        "info": "https://omnipresense.com/wp-content/uploads/2023/11/AN-010-Z_API_Interface.pdf",
        "x": 170,
        "y": 60,
        "wires": []
    },
    {
        "id": "490d12fc644f0914",
        "type": "inject",
        "z": "94d07e407c25f282",
        "d": true,
        "name": "init: switch to JSON, MPH, no factions",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OJONOSF0USS2K+OUOTR>5O=1A! ",
        "payloadType": "str",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ],
        "info": "\"ON\" & \"OJ\" & \"F0\" & \"US\" & \"S2\" & \"K+\" & \"A!\"\n\n**ON** Detected Object Write\nSensor determines if an object is present by\nlooking for 2 consecutive speed reports. If\nmet, the max speed detected is reported. If a\nfaster speed is detected, additional speeds are\nreported. This lowers the number of speed\nreports for a given detected object. Use On to\nturn the mode off.\n\n**OJ** JSON Mode Write\nTurns on output to format data in JSON\nformat. An example would output:\n{\"speed\":\"0.06\"}. Use Oj to turn off JSON\nmode.\n\n**Fn** Decimal Places Write\nSet n to the number of decimal places to be\nreported. For example, setting to F2 will\nreport 2 decimal places (ex. 10.35). F0 will\nprovide the integer value only. Valid values of\nn are 0-5.\n\n**US** Miles per hour Write {\"Units\":\"mph\"} Calculations are based on the\ninternational mile (1,609.344 m per mile).\n\n**S2** 20K samples/second Write\n\n**K+** Peak Speed Average Enable Write Enables speed averaging of peak detected\nvalues across the nearest two speeds\ndetected. (-A, -C)\n\n**A!** Save Configuration Write Saves current configuration settings in flash\nmemory. Upon power loss or recycling power,\nthe saved configurations will be used as the\ndefault.\n"
    },
    {
        "id": "4907ca649aa63c1c",
        "type": "inject",
        "z": "94d07e407c25f282",
        "name": "query Module Info, after 1 sec",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "??",
        "payloadType": "str",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ],
        "info": "**??** Module Information Read\n{\"Product\":\"OPS242\"}\n{\"Version\":\"1.3.9\"}\n{\"SamplingRate\":10000, \"resolution\":0.0607}\n{“SampleSize”:1024}\n{\"Clock\":\"54\"}\n{\"Q2COUNT\":\"1149 (~22980 counts/sec)\n@t=37\"}\n{\"PowerMode\":\"Continuous\"}\n{\"Squelch\":\"100\"}\n{“RequiredMinSpeed”:”0.000”}"
    },
    {
        "id": "bb2b78040385d37e",
        "type": "json",
        "z": "94d07e407c25f282",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 700,
        "wires": [
            [
                "36b68e0861cc5fc4",
                "ab1b88cd16ef31c4",
                "04f7f4b860fe36bc",
                "c1154952a99c99a3"
            ]
        ]
    },
    {
        "id": "36b68e0861cc5fc4",
        "type": "debug",
        "z": "94d07e407c25f282",
        "name": "debug-radar-all-output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 700,
        "wires": []
    },
    {
        "id": "16dcdaf44cc5b739",
        "type": "inject",
        "z": "94d07e407c25f282",
        "d": true,
        "name": "send Query Sampling rate",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "s?",
        "payloadType": "str",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ]
    },
    {
        "id": "87a395a01109d939",
        "type": "inject",
        "z": "94d07e407c25f282",
        "d": true,
        "name": "init: change range to not report",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "r>100",
        "payloadType": "str",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ]
    },
    {
        "id": "ab1b88cd16ef31c4",
        "type": "switch",
        "z": "94d07e407c25f282",
        "g": "04cc3b7b3e019683",
        "name": "if payload has key TimedSpeedCounts & count > 0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "TimedSpeedCounts",
                "vt": "str"
            },
            {
                "t": "jsonata_exp",
                "v": "$number(msg.payload.TimedSpeedCounts.count) > 0",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 1040,
        "wires": [
            [
                "7055d871474e5c63"
            ],
            []
        ],
        "info": "TimedSpeedCounts default to 1-minute intervals\n- `count` represents number of objects at any speed\n- `average` represents the mean speed (average of units for all counts)\n- `units` represents the `average` units\n- `direction` indicates inbound/outbound relative to radar, will have both each interval"
    },
    {
        "id": "35c0bee67148cfa7",
        "type": "debug",
        "z": "94d07e407c25f282",
        "g": "04cc3b7b3e019683",
        "name": "debug-radar-key-valid-TimedSpeedCounts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ccd16a974b7dc6c9",
        "type": "debug",
        "z": "94d07e407c25f282",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 620,
        "wires": []
    },
    {
        "id": "5c9f0ea3d994a42c",
        "type": "inject",
        "z": "94d07e407c25f282",
        "name": "init: set unix time, after 3 secs",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "\"C=\" & $millis() & \"CZ=PST+-8\"",
        "payloadType": "jsonata",
        "x": 210,
        "y": 480,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ]
    },
    {
        "id": "e8e6eaf852900af0",
        "type": "inject",
        "z": "94d07e407c25f282",
        "name": "get human readable timestamp, after 4 secs",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "payload": "OH",
        "payloadType": "str",
        "x": 250,
        "y": 540,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ]
    },
    {
        "id": "9585fc99f2e09487",
        "type": "inject",
        "z": "94d07e407c25f282",
        "name": "query Output settings, after 0.1 secs",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "O?o?",
        "payloadType": "str",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ],
        "info": "**O?/o?** Output Settings Write\nOutput current output settings for speed and\nrange. Use O? for speed settings and o? for\nrange settings."
    },
    {
        "id": "7055d871474e5c63",
        "type": "change",
        "z": "94d07e407c25f282",
        "g": "04cc3b7b3e019683",
        "name": "add payload.timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "35c0bee67148cfa7",
                "9496fe7a475726de"
            ]
        ]
    },
    {
        "id": "9496fe7a475726de",
        "type": "function",
        "z": "94d07e407c25f282",
        "g": "04cc3b7b3e019683",
        "name": "format data for influxdb TimedSpeedCounts measurement",
        "func": "msg.payload = [\n    {\n        average: Number(msg.payload.TimedSpeedCounts.average),\n        count: Number(msg.payload.TimedSpeedCounts.count),\n        time: msg.payload.timestamp\n    },\n    {\n        location: \"ne26th-wasco-01-nb\",\n        direction: String(msg.payload.TimedSpeedCounts.direction),\n        units: String(msg.payload.TimedSpeedCounts.units)\n    }\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "617c9bb213538929"
            ]
        ]
    },
    {
        "id": "c96c20a6a94d3073",
        "type": "catch",
        "z": "94d07e407c25f282",
        "g": "04cc3b7b3e019683",
        "name": "catch influxdb writes TimedSpeedCounts",
        "scope": [
            "617c9bb213538929"
        ],
        "uncaught": false,
        "x": 1200,
        "y": 1140,
        "wires": [
            [
                "16550239673f6d6d"
            ]
        ]
    },
    {
        "id": "16550239673f6d6d",
        "type": "debug",
        "z": "94d07e407c25f282",
        "name": "debug influxdb write errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 1140,
        "wires": []
    },
    {
        "id": "a9d702a51bc8f0c9",
        "type": "comment",
        "z": "94d07e407c25f282",
        "name": "variables to pass",
        "info": "Via Docker Environment \n- `device_ip` of Pi (for influxDB server)\n- `location` string (for influxDB `location` tag)\n- `radar_camera` name of camera (for attaching speeds to events) - needs to match Frigate config\n\n\n",
        "x": 820,
        "y": 60,
        "wires": []
    },
    {
        "id": "526eb1967dda78c4",
        "type": "comment",
        "z": "94d07e407c25f282",
        "g": "04cc3b7b3e019683",
        "name": "TimedSpeedCounts are @O and @|300 (5-min)",
        "info": "",
        "x": 280,
        "y": 1180,
        "wires": []
    },
    {
        "id": "04f7f4b860fe36bc",
        "type": "switch",
        "z": "94d07e407c25f282",
        "g": "1d00b3011a12b204",
        "name": "if payload has key DetectedObjectVelocity",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "DetectedObjectVelocity",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 840,
        "wires": [
            [
                "4039fcd5e467867d"
            ]
        ]
    },
    {
        "id": "4039fcd5e467867d",
        "type": "change",
        "z": "94d07e407c25f282",
        "g": "1d00b3011a12b204",
        "name": "add payload.timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 900,
        "wires": [
            [
                "4681243b9c70e906"
            ]
        ]
    },
    {
        "id": "4681243b9c70e906",
        "type": "function",
        "z": "94d07e407c25f282",
        "g": "1d00b3011a12b204",
        "name": "format data for influxdb DetectedObjectVelocity measurement",
        "func": "msg.payload = [\n    {\n        velocity: Number(msg.payload.DetectedObjectVelocity),\n        time: msg.payload.timestamp\n    },\n    {\n        location: \"ne26th-wasco-01-nb\",\n        direction: String(msg.payload.direction),\n        units: String(msg.payload.unit)\n    }\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 900,
        "wires": [
            [
                "b8db51ab64a3d61e"
            ]
        ]
    },
    {
        "id": "b0814f902d047f9f",
        "type": "catch",
        "z": "94d07e407c25f282",
        "g": "1d00b3011a12b204",
        "name": "catch influxdb writes DetectedObjectVelocity",
        "scope": [
            "b8db51ab64a3d61e"
        ],
        "uncaught": false,
        "x": 1210,
        "y": 940,
        "wires": [
            [
                "16550239673f6d6d"
            ]
        ]
    },
    {
        "id": "affe7cfb9861e62d",
        "type": "serial in",
        "z": "94d07e407c25f282",
        "name": "receive ttyACM0",
        "serial": "d65c36624d553ee7",
        "x": 160,
        "y": 620,
        "wires": [
            [
                "bb2b78040385d37e",
                "ccd16a974b7dc6c9"
            ]
        ]
    },
    {
        "id": "8e8ede8ca221552b",
        "type": "serial out",
        "z": "94d07e407c25f282",
        "name": "send to OPS24-C",
        "serial": "d65c36624d553ee7",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "617c9bb213538929",
        "type": "influxdb out",
        "z": "94d07e407c25f282",
        "g": "04cc3b7b3e019683",
        "influxdb": "73598328fc95017b",
        "name": "write influxdb TimedSpeedCounts",
        "measurement": "TimedSpeedCounts",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "taffic_monitor_01",
        "bucket": "tm-05",
        "x": 1180,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b8db51ab64a3d61e",
        "type": "influxdb out",
        "z": "94d07e407c25f282",
        "g": "1d00b3011a12b204",
        "influxdb": "73598328fc95017b",
        "name": "write influxdb DetectedObjectVelocity",
        "measurement": "DetectedObjectVelocity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "taffic_monitor_01",
        "bucket": "tm-05",
        "x": 1190,
        "y": 900,
        "wires": []
    },
    {
        "id": "3e1c5c9ee55e3284",
        "type": "inject",
        "z": "94d07e407c25f282",
        "name": "init: reset range report",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "r>0r<0A!",
        "payloadType": "str",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "8e8ede8ca221552b"
            ]
        ]
    },
    {
        "id": "c1154952a99c99a3",
        "type": "switch",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "if payload has key speed",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "speed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 1300,
        "wires": [
            [
                "2fded2c6588bfd47"
            ]
        ],
        "info": "TimedSpeedCounts default to 1-minute intervals\n- `count` represents number of objects at any speed\n- `average` represents the mean speed (average of units for all counts)\n- `units` represents the `average` units\n- `direction` indicates inbound/outbound relative to radar, will have both each interval"
    },
    {
        "id": "207eac3ff9b634a5",
        "type": "debug",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "debug-radar-key-valid-raw-speeds",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1300,
        "wires": []
    },
    {
        "id": "2fded2c6588bfd47",
        "type": "change",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "add payload.timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1360,
        "wires": [
            [
                "207eac3ff9b634a5",
                "18b1eaf942e6b674"
            ]
        ]
    },
    {
        "id": "1daaab9e36f6fdb2",
        "type": "influxdb out",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "influxdb": "73598328fc95017b",
        "name": "write influxdb RawSpeedMagnitude",
        "measurement": "RawSpeedMagnitude",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "taffic_monitor_01",
        "bucket": "tm-05",
        "x": 1560,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0cccf06fa248a643",
        "type": "catch",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "catch influxdb writes RawSpeedMagnitude",
        "scope": [
            "1daaab9e36f6fdb2"
        ],
        "uncaught": false,
        "x": 1580,
        "y": 1400,
        "wires": [
            [
                "16550239673f6d6d"
            ]
        ]
    },
    {
        "id": "ab905349bef72bac",
        "type": "function",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "format data for influxdb speed, magnitude measurement, inbound",
        "func": "msg.payload = [\n    {\n        speed: Number(msg.payload.speed),\n        magnitude: Number(msg.payload.magnitude),\n        time: msg.payload.timestamp\n    },\n    {\n        location: \"ne26th-wasco-01-nb\",\n        direction: String(\"inbound\"),\n        units: String(msg.payload.unit)\n    }\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1340,
        "wires": [
            [
                "1daaab9e36f6fdb2",
                "65512a020a745b9a"
            ]
        ]
    },
    {
        "id": "18b1eaf942e6b674",
        "type": "switch",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "switch inbound, outbound speed",
        "property": "payload.speed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 1360,
        "wires": [
            [
                "ab905349bef72bac"
            ],
            [
                "ffefd7af202792df"
            ]
        ]
    },
    {
        "id": "ffefd7af202792df",
        "type": "function",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "format data for influxdb speed, magnitude measurement, outbound",
        "func": "msg.payload = [\n    {\n        speed: Number(msg.payload.speed),\n        magnitude: Number(msg.payload.magnitude),\n        time: msg.payload.timestamp\n    },\n    {\n        location: \"ne26th-wasco-01-nb\",\n        direction: String(\"outbound\"),\n        units: String(msg.payload.unit)\n    }\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1400,
        "wires": [
            [
                "1daaab9e36f6fdb2",
                "65512a020a745b9a"
            ]
        ]
    },
    {
        "id": "65512a020a745b9a",
        "type": "debug",
        "z": "94d07e407c25f282",
        "g": "3acc78eb8fcb72f8",
        "name": "debug-radar-raws-speeds-write",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1300,
        "wires": []
    },
    {
        "id": "6c2d22f0a8cb1fc1",
        "type": "debug",
        "z": "49e416bfab1d4055",
        "name": "debug: Broker status events",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 140,
        "wires": []
    },
    {
        "id": "fd148029fe6bee47",
        "type": "debug",
        "z": "49e416bfab1d4055",
        "name": "debug: broker publish events",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 180,
        "wires": []
    },
    {
        "id": "038275ccb8bafbb0",
        "type": "mqtt in",
        "z": "49e416bfab1d4055",
        "name": "",
        "topic": "frigate/events",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a5d65dd0e3566daa",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "4a1c5b87abde2112"
            ]
        ]
    },
    {
        "id": "4a1c5b87abde2112",
        "type": "debug",
        "z": "49e416bfab1d4055",
        "name": "debug: published frigate messages",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 280,
        "wires": []
    },
    {
        "id": "b8f09eb5bad1c457",
        "type": "comment",
        "z": "49e416bfab1d4055",
        "name": "collect DetectedObjectVelocity from radar for event",
        "info": "Get all DetectedObjectVelocity from Event `start_time` to `end_time`\n- Get both Inbound/Outbound (make determination later)\n- Assume ZONES set up in camera - near/far and `entered_zones` contains them *in order*\n- Take IQR? Mean? Median?",
        "x": 390,
        "y": 420,
        "wires": []
    },
    {
        "id": "df15577b1109b274",
        "type": "comment",
        "z": "49e416bfab1d4055",
        "name": "send back Frigate sublabel with speed(s) back for event",
        "info": "API example (python):\n```\nrequests.post(f\"{FRIGATE_HOST}/api/events/{event_id}/sub_label\", json={\"subLabel\": vehicle_name, \"subLabelScore\": round(score, 2)})\n```",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "a980360b45ee8b7b",
        "type": "http request",
        "z": "49e416bfab1d4055",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://10.10.10.224:5000/api/events/1708220841.127413-uctgde",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 620,
        "wires": [
            [
                "521a1c5d5d51f5b9"
            ]
        ]
    },
    {
        "id": "521a1c5d5d51f5b9",
        "type": "debug",
        "z": "49e416bfab1d4055",
        "name": "debug - http 01 return",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 620,
        "wires": []
    },
    {
        "id": "32a0f2a8f17ce82c",
        "type": "inject",
        "z": "49e416bfab1d4055",
        "name": "make request",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "a980360b45ee8b7b"
            ]
        ]
    },
    {
        "id": "e91b829fc7e76871",
        "type": "inject",
        "z": "49e416bfab1d4055",
        "name": "make query",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "178ee5ca97585a4b"
            ]
        ]
    },
    {
        "id": "c6df4e04754031df",
        "type": "debug",
        "z": "49e416bfab1d4055",
        "name": "debug - influxdb query 01",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 720,
        "wires": []
    },
    {
        "id": "1720d60a87cfb2d7",
        "type": "aedes broker",
        "z": "49e416bfab1d4055",
        "name": "frigate-local",
        "mqtt_port": "1883",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 190,
        "y": 160,
        "wires": [
            [
                "6c2d22f0a8cb1fc1"
            ],
            [
                "fd148029fe6bee47"
            ]
        ]
    },
    {
        "id": "178ee5ca97585a4b",
        "type": "influxdb in",
        "z": "49e416bfab1d4055",
        "influxdb": "73598328fc95017b",
        "name": "query-01",
        "query": "from(bucket: \"tm-05\")\n\t|> range(start: -3h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"DetectedObjectVelocity\")\n  |> filter(fn: (r) => r[\"_field\"] == \"velocity\")\n  |> filter(fn: (r) => r[\"direction\"] == \"inbound\")\n  |> filter(fn: (r) => r[\"location\"] == \"ne26th-wasco-01-nb\")\n  |> filter(fn: (r) => r[\"units\"] == \"mph\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "taffic_monitor_01",
        "x": 300,
        "y": 720,
        "wires": [
            [
                "c6df4e04754031df"
            ]
        ]
    },
    {
        "id": "8cee82669b6b8512",
        "type": "comment",
        "z": "90d5c925f9fbf9fd",
        "name": "capture bluetooth to influxdb",
        "info": "",
        "x": 220,
        "y": 140,
        "wires": []
    }
]